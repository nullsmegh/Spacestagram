@import 'shared/variables';

/*---------------------------------------------------------------------------------------------*/
/* Mixins */
/*---------------------------------------------------------------------------------------------*/

//
//  MEDIA QUERIES
//––––––––––––––––––––––––––––––––––––––––––––––––––

// A map of breakpoints.
$breakpoints: (
  xs: 576px,
  sm: 768px,
  md: 992px,
  lg: 1200px,
  xl: 1501px
);



// $breakpoints: (
//   ss: 20rem,
//   xs: 36rem,
//   sm: 48rem,
//   md: 62rem,
//   lg: 75rem,
//   xl: 90rem
// );
//
//  RESPOND ABOVE
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-above(sm) {}
@mixin respond-above($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (min-width: $breakpoint-value) {
      @content;
    }
  
  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BELOW
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-below(sm) {}
@mixin respond-below($breakpoint) {

  // If the breakpoint exists in the map.
  @if map-has-key($breakpoints, $breakpoint) {

    // Get the breakpoint value.
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    // Write the media query.
    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  
  // If the breakpoint doesn't exist in the map.
  } @else {

    // Log a warning.
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}


//
//  RESPOND BETWEEN
//––––––––––––––––––––––––––––––––––––––––––––––––––

// @include respond-between(sm, md) {}
@mixin respond-between($lower, $upper) {

  // If both the lower and upper breakpoints exist in the map.
  @if map-has-key($breakpoints, $lower) and map-has-key($breakpoints, $upper) {

    // Get the lower and upper breakpoints.
    $lower-breakpoint: map-get($breakpoints, $lower);
    $upper-breakpoint: map-get($breakpoints, $upper);

    // Write the media query.
    @media (min-width: $lower-breakpoint) and (max-width: ($upper-breakpoint - 1)) {
      @content;
    }
  
  // If one or both of the breakpoints don't exist.
  } @else {

    // If lower breakpoint is invalid.
    @if (map-has-key($breakpoints, $lower) == false) {

      // Log a warning.
      @warn 'Your lower breakpoint was invalid: #{$lower}.';
    }

    // If upper breakpoint is invalid.
    @if (map-has-key($breakpoints, $upper) == false) {

      // Log a warning.
      @warn 'Your upper breakpoint was invalid: #{$upper}.';
    }
  }
}

/*---------------------------------------------------------------------------------------------*/
/* Styles */
/*---------------------------------------------------------------------------------------------*/


html, body {
	padding: 0 0;
	margin: 0 0;
	font-family: $theme-primary-font;
  font-size: 16px;
  color: $theme-primary-color;
  background-color: $theme-accent-color;
}


.o-container {

	display: block;
	margin-left:auto;
	margin-right: auto;
	padding:0 20px;
	box-sizing: border-box;

	@include respond-above('xs') {
		padding:0 20px;
		width: 100%
	} 

	@include respond-above('sm') {
		padding: 0 0;
		width: 692px;
	}

	@include respond-above('md') {
		width: 904px;
	}

	@include respond-above('lg') {
		width:42rem;
	}

	@include respond-above('xl') {
		width: 1440px;
	}

}

